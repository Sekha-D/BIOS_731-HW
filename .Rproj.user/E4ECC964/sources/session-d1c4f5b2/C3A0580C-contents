---
title: "Lab: a crash course in reproducibility"
subtitle: "BIOS 731: Advanced Statistical Computing"
author: "Julia Wrobel"
output:
  html_document: 
    code_folding: hide
    toc: true
    toc_float: true
hitheme: tomorrow
highlighter: highlight.js
---

```{r, echo= FALSE, include = FALSE}
library(tidyverse)

knitr::opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.width = 7,
  fig.height = 5
)

theme_set(theme_bw() + theme(legend.position = "bottom"))
```


# Setup

Load your libraries here.  I find it to be best practice to load libraries at the **beginning** of a document. Why?

```{r}
# library(tidyverse) # this was loaded in the hidden chunk above
```

Because then it would be easily reproducible by any user. If they need to install any libraries they can do it tprior to running the code

# Using the command line

## **Exercise 1**: 

Open the terminal and perform the following tasks:

1. What is your current working directory?
C:\Users\sdaluwa\OneDrive - Emory University\Desktop\Emory\Spring 2025\Advanved computing\Labs

2. In your current directory, make a directory named `tmp`
3. Navigate into this new folder called `tmp`
4. Add an empty file named `tmp_file`
5. Within `tmp`, add an empty directory named `another_tmp`
6. Within `another_tmp`, add an additional empty file named `another_tmp_file`
7. Remove all directories and files create as part of this task



# Project organization

## CDC open data

The CDC has [1331](https://data.cdc.gov/browse) open-source datasets available at [data.cdc.gov](https://data.cdc.gov).

* Topic areas include injury & violence, vaccination, smoking, pregnancy, chronic disease, and disease surveillance
* Great source of Covid surveillance data


FYI, under the OPEN Government Data Act (2018), government data is required to be made available in open, machine-readable formats, while continuing to ensure privacy and security.

* [data.gov](https://data.gov/) hosts additional 250K+ datasets

### Covid19 wastewater data

We will work with the National Wastewater Surveillance System (NWSS) Public SARS-CoV-2 Concentration in Wastewater Data.
* SARS-CoV-2 concentration at different sampling locations
* Updated daily


__Longitudinal data__
* Provides concentrations over time 
* 4 columns



__Cross-sectional data__
* Current concentrations and other summaries
* 16 columns, including state, county



We will merge these datasets and analyze concentration over time in different counties. 
* Data can be downloaded from [Socrata](https://dev.socrata.com/foundry/data.cdc.gov/g653-rqe2)
  * Socrata is a cloud-based platform used by many local/state/federal governments for data-sharing

* Goal will be to produce end-to-end reproducible workflows with this data
  * I have already set most of this up!

## **Exercise 2**: 

1. Download the file `example_data.zip` from Canvas. Unzip and save in an organized location- this will become it's own GitHub repository.  **Note**: for Windows users, it may unzip in a strange way. You want your directory structure to look like the following:


<img src="structure.png" style="width:50%">


2. This is a good example of a well-organized (albeit bare bones)  project. Explore the directory contents. What is the workflow of this project? What do you like and dislike about how it is set up?


3. Add commentary to the file `analysis/final_report.Rmd` to describe what is happening in the report.

# Git and GitHub


## **Exercise 3**:

Answer the following questions / Perform the following tasks


1. Open the `example_project` in RStudio by double-clicking the `.Rproj` file.  Is this a `git` repository? Why or why not?

git status
fatal: not a git repository (or any of the parent directories)

2. If not yet a git repository, start one. Check `git status`. What files are currently ready to be staged and commit?
git init
git status
output:         .Rhistory
        .Rproj.user/
        README.md
        analysis/
        data/
        drafts/
        example_project.Rproj
        results/
        source/

3. Create a `.gitignore` file.  Ignore any data files, html files, and figures that are in the repo.
touch .gitignore
open .gitignore
after it opens type *.pdf *.html *.Rdata *.png

4. Add your first commit!git add --a
git commit -m "my highly informative commit message"
git status

5. Make a GitHub repo called `example_project`. Link this with your local folder of the same name.
Create a github account, and create this

6. Push your local contents to GitHub
Then type the following on terminal
git remote add origin https://github.com/Sekha-D/example_project.git
git branch -M main
git push -u origin main

7. Make some changes locally, commit, and push to GitHub.


# Additional resources


* [Learn enough command line to be dangerous](https://www.learnenough.com/command-line-tutorial): this tutorial is more or less an expanded version of what I talked about today.
* [List of more command line tutorials](http://www.tutorialspoint.com/unix/): tons of resources exist if you want to get more advanced!
* [Jenny Bryan and James Hester's chapter on project-oriented workflow](https://rstats.wtf/project-oriented-workflow.html)
* [Hadley Wickham on R Projects](https://r4ds.had.co.nz/workflow-projects.html)
* [My version of projectr package on Github](https://github.com/julia-wrobel/projectr)
* [Yihui Xie on Parameterized Reports](https://bookdown.org/yihui/rmarkdown/parameterized-reports.html)
* [More Git/GitHub](https://juliawrobel.com/reproducible_research/git.html)
