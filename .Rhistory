boot_nonpara_perc_residuals=function(sample,beta_est,B,alpha=0.05){
residuals=sample$Y-sample$X*beta_est
n=nrow(sample)
nonboot_est = rep(0, B)
for (i in 1:B) {
nboot.res = sample(residuals, n, replace=TRUE)
nboot.data=data.frame(Y_b=sample$X*beta_est+nboot.res,X=sample$X)
model_fit=lm(Y_b~X, data=nboot.data)
nonboot_est[i] = summary(model_fit)$coefficients[2,1]
}
nonboot_sd = sd(nonboot_est)
boot_perc=quantile(nonboot_est, probs = c(alpha/2, 1-(alpha/2)))
return(c(nonboot_sd,boot_perc))
}
boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
source(here::here("source", "Functions.R"))
source(here::here("Simulations","run_scenario.R"))
B=10
nt=10
alpha=0.05
nsim=0.95*(1 - 0.95)/(0.01)^2
n = c(10, 50, 500)
beta_true = c(0, 0.5, 2)
sigma2_true = c(2, log(2))
param_grid = expand.grid(n = n,
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
num_cores = detectCores() -2
cl = makeCluster(num_cores)
registerDoParallel(cl)
summary_table = foreach(i =1:no_scenario, .combine = rbind) %dopar% {
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
}
summary_table
filename = paste0("scenario_", paste(params,collapse = "_"), ".RDA")
load(file = here::here("results", filename))
source(here::here("source", "Functions.R"))
source(here::here("Simulations","run_scenario.R"))
B=500
nt=500
alpha=0.05
nsim=0.95*(1 - 0.95)/(0.01)^2
n = c(10, 50, 500)
beta_true = c(0, 0.5, 2)
sigma2_true = c(2, log(2))
param_grid = expand.grid(n = n,
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
num_cores = detectCores() -2
cl = makeCluster(num_cores)
registerDoParallel(cl)
summary_table = foreach(i =1:no_scenario, .combine = rbind) %dopar% {
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
}
summary_table
param_grid
1:no_scenario
i
param_grid[i,]
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
warnings()
set.seed(3333)
i=1
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
tictoc::tic()
boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
time_stamp2 = tictoc::toc(quiet =TRUE)
boot_perc_time=time_stamp2$toc - time_stamp2$tic
estimates<- c(estimates,boot_perc)
tictoc::tic()
boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
time_stamp3 = tictoc::toc(quiet =TRUE)
boot_t_time=time_stamp3$toc - time_stamp3$tic
estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
estimates
n
expand.grid(n = 10,#n
beta_true = beta_true,
sigma2_true = sigma2_true)
param_grid = expand.grid(n = 10,#n
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
summary_table = foreach(i =1:no_scenario, .combine = rbind) %dopar% {
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
}
B
nt
for (i in 1:no_scenario){
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
}
i
summary_model$coefficients[2,1]
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
model_fit=lm(Y~X, data=simdata)
true_beta
summary_model=summary(model_fit)
confid_int=confint(model_fit)
ength(summary_model$coefficients)
length(summary_model$coefficients)
summary_model$coefficients)
summary_model$coefficients
nrow(summary_model$coefficients)
source("~/Library/CloudStorage/OneDrive-Emory/Desktop/Emory/Spring 2025/Advanved computing/HW/HW1/Simulations/run_scenario.R", echo=TRUE)
run_scenario<- function (params,nsim,B,nt,alpha=0.05){
results = matrix(NA,ncol=15,nrow=nsim)
set.seed(3333)
for(i in 1:nsim){
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
# tictoc::tic()
# boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
#
# time_stamp2 = tictoc::toc(quiet =TRUE)
# boot_perc_time=time_stamp2$toc - time_stamp2$tic
#
# estimates<- c(estimates,boot_perc)
#
# tictoc::tic()
# boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
# time_stamp3 = tictoc::toc(quiet =TRUE)
# boot_t_time=time_stamp3$toc - time_stamp3$tic
#
# estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
#
# results[i,] = estimates
}
####################
# filename = paste0("scenario_", paste(params,collapse = "_"), ".RDA")
# save(results,file = here::here("Results", filename))
#
# beta_est<-mean(results[,1])
# bias<- params$beta_true-beta_est
#
# wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
#
# boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
#
# boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
#
# sum_wald_time<-sum(results[,13])
# sum_bootperc_time<-sum(results[,14])
# sum_boott_time<-sum(results[,15])
#
# return(cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
#          sum_bootperc_time,sum_boott_time))
}
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
results = matrix(NA,ncol=15,nrow=nsim)
set.seed(3333)
for(i in 1:nsim){
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
# tictoc::tic()
# boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
#
# time_stamp2 = tictoc::toc(quiet =TRUE)
# boot_perc_time=time_stamp2$toc - time_stamp2$tic
#
# estimates<- c(estimates,boot_perc)
#
# tictoc::tic()
# boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
# time_stamp3 = tictoc::toc(quiet =TRUE)
# boot_t_time=time_stamp3$toc - time_stamp3$tic
#
# estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
#
# results[i,] = estimates
}
i
set.seed(seed[i])
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
simdata
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
set.seed(3333)
for(i in 1:nsim){
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
# tictoc::tic()
# boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
#
# time_stamp2 = tictoc::toc(quiet =TRUE)
# boot_perc_time=time_stamp2$toc - time_stamp2$tic
#
# estimates<- c(estimates,boot_perc)
#
# tictoc::tic()
# boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
# time_stamp3 = tictoc::toc(quiet =TRUE)
# boot_t_time=time_stamp3$toc - time_stamp3$tic
#
# estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
#
# results[i,] = estimates
}
i
simdata
var(simdata$X)==0
set.seed(3333)
for(i in 1:nsim){
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
if (var(simdata$X)==0) {
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
}
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
# tictoc::tic()
# boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
#
# time_stamp2 = tictoc::toc(quiet =TRUE)
# boot_perc_time=time_stamp2$toc - time_stamp2$tic
#
# estimates<- c(estimates,boot_perc)
#
# tictoc::tic()
# boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
# time_stamp3 = tictoc::toc(quiet =TRUE)
# boot_t_time=time_stamp3$toc - time_stamp3$tic
#
# estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
#
# results[i,] = estimates
}
set.seed(3333)
for(i in 1:nsim){
####################
# simulate data
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
while (var(simdata$X)==0) {
simdata = get_simdata(n = params$n,
beta_treat = params$beta_true,
sigma2 = params$sigma2_true)
}
####################
# apply method(s)
fit = fit_model(simdata)
####################
# calculate estimates
tictoc::tic()
estimates = get_estimates(model_fit = fit,
true_beta = params$beta_true)
estimates = c(estimates,true_beta = params$beta_true, n = params$n,sigma2_true = params$sigma2_true)
time_stamp1 = tictoc::toc(quiet =TRUE)
wald_time=time_stamp1$toc - time_stamp1$tic
coef=estimates[1]
# tictoc::tic()
# boot_perc<-boot_nonpara_perc_residuals(sample=simdata,beta_est=coef,B=B,alpha=alpha)
#
# time_stamp2 = tictoc::toc(quiet =TRUE)
# boot_perc_time=time_stamp2$toc - time_stamp2$tic
#
# estimates<- c(estimates,boot_perc)
#
# tictoc::tic()
# boot_t<-boot_nonpara_t_residuals(sample=simdata,beta_est=coef,B=B,nt=nt,alpha=alpha)
# time_stamp3 = tictoc::toc(quiet =TRUE)
# boot_t_time=time_stamp3$toc - time_stamp3$tic
#
# estimates<- c(estimates,boot_t,wald_time,boot_perc_time,boot_t_time)
#
# results[i,] = estimates
}
param_grid = expand.grid(n = c(50,500),#n
beta_true = beta_true,
sigma2_true = sigma2_true)
test2=[]
test2=c()
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
i
i=1
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=c()
for (i in 1:noscenario){
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=rbind(test2, test)
hist(results[,2])
}
no_scenario=nrow(param_grid)
for (i in 1:noscenario){
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=rbind(test2, test)
hist(results[,2])
}
for (i in 1:no_scenario){
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=rbind(test2, test)
hist(results[,2])
}
test2
test2=c()
for (i in 1:no_scenario){
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
params = param_grid[i,]
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=rbind(test2, test)
hist(results[,2])
}
test2
param_grid = expand.grid(n = 10,#n
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
View(param_grid)
source(here::here("source", "Functions.R"))
source(here::here("Simulations","run_scenario.R"))
View(run_scenario)
B=500
nt=500
alpha=0.05
nsim=0.95*(1 - 0.95)/(0.01)^2
n = c(10, 50, 500)
beta_true = c(0, 0.5, 2)
sigma2_true = c(2, log(2))
param_grid = expand.grid(n = 10,#n
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
summary_table = foreach(i =1:no_scenario, .combine = rbind) %dopar% {
params = param_grid[i,]
run_scenario(params,nsim=nsim,B=B,nt=nt,alpha=alpha)
}
param_grid = expand.grid(n = n,
beta_true = beta_true,
sigma2_true = sigma2_true)
no_scenario=nrow(param_grid)
test2=c()
for (i in 1:no_scenario){
filename = paste0("scenario_", paste(param_grid[i,],collapse = "_"), ".RDA")
load(file = here::here("results", filename))
params = param_grid[i,]
beta_est<-mean(results[,1])
bias<- params$beta_true-beta_est
wald_coverage<-mean((params$beta_true >= results[,3] & params$beta_true <= results[,4]))
boot_perc_coverage<-mean((params$beta_true >= results[,9] & params$beta_true <= results[,10]))
boot_t_coverage<-mean((params$beta_true >= results[,11] & params$beta_true <= results[,12]))
sum_wald_time<-sum(results[,13])
sum_bootperc_time<-sum(results[,14])
sum_boott_time<-sum(results[,15])
test=cbind(params,beta_est,bias,wald_coverage,boot_perc_coverage,boot_t_coverage, sum_wald_time,
sum_bootperc_time,sum_boott_time)
test2=rbind(test2, test)
hist(results[,2])
}
test2
summary_table
summary_table=test2
save(summary_table,file = here::here("Results", "summary_table"))
save(summary_table,file = here::here("Results", "summary_table.RDA"))
